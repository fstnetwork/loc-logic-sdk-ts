/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Payload =
  | {
      http: HttpPayload;
    }
  | {
      messageQueue: MessageQueuePayload;
    }
  | {
      event: EventPayload;
    };
export type Address =
  | {
      socketAddr: SocketAddress;
    }
  | {
      pipe: Pipe;
    };
export type Protocol = "tcp" | "udp";
export type Subscriber = {
  kafka: KafkaSubscriber;
};

/**
 * Payload represent a HTTP request
 */
export interface HttpPayload {
  /**
   * The identity context of API Gateway
   */
  apiGatewayIdentityContext: TriggerIdentityContext;
  /**
   * The identity context of API Route
   */
  apiRouteIdentityContext: TriggerIdentityContext;
  /**
   * A base64-encoded string
   */
  body: number[];
  destination?: Peer | null;
  headers: {
    [k: string]: unknown;
  };
  host: string;
  method: string;
  path: string;
  query: string;
  requestId: string;
  scheme: string;
  source?: Peer | null;
  version: "HTTP/0.9" | "HTTP/1.0" | "HTTP/1.1" | "HTTP/2.0" | "HTTP/3.0";
  [k: string]: unknown;
}
export interface TriggerIdentityContext {
  /**
   * Saffron internal id
   */
  id: string;
  /**
   * Name
   */
  name: string;
  [k: string]: unknown;
}
export interface Peer {
  address: Address;
  [k: string]: unknown;
}
export interface SocketAddress {
  address: string;
  protocol: Protocol;
  [k: string]: unknown;
}
export interface Pipe {
  mode: number;
  path: string;
  [k: string]: unknown;
}
/**
 * Payload represents a Message Queue Message
 */
export interface MessageQueuePayload {
  clientIdentityContext: TriggerIdentityContext;
  data: number[];
  subscriber: Subscriber;
  [k: string]: unknown;
}
export interface KafkaSubscriber {
  brokers: string[];
  groupId: string;
  offset: number;
  partition: number;
  topic: string;
  [k: string]: unknown;
}
/**
 * Payload represent an Event
 */
export interface EventPayload {
  [k: string]: unknown;
}
